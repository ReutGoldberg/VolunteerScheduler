generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
  id Int @id @default(autoincrement())
  first_name String?
  last_name String?
  email String @unique
  token String @unique
  is_admin Boolean
  EventManagerMap EventManagerMap[]
  Requests PendingRequests[]
  EventVolunteerMap EventVolunteerMap[]
}

model Events {
  id Int @id @default(autoincrement())
  title String
  details String
  created_by String
  location String?
  min_volenteering Int?
  max_volenteering Int?
  start_time DateTime
  end_time DateTime
  label String
  EventManagerMap EventManagerMap[]
  EventLabelMap EventLabelMap[]
  Requests PendingRequests[]
  EventVolunteerMap EventVolunteerMap []
}

model Labels{
  id Int @id @default(autoincrement())
  name String
  EventLabelMap EventLabelMap[]
}

model EventManagerMap{
  event_id Int
  Events Events? @relation(fields: [event_id], references: [id])
  user_id Int
  Users Users? @relation(fields: [user_id], references: [id])
  @@id([event_id, user_id])
}

model EventLabelMap{
  event_id Int
  Events Events? @relation(fields: [event_id], references: [id])
  label_id Int
  Labels Labels? @relation(fields: [label_id], references: [id])
  @@id([event_id, label_id])
}


model Logs{
  id Int @id @default(autoincrement())
  text String?
  time DateTime?
}

model PendingRequests{
  id Int @id @default(autoincrement())
  user_id Int
  Users Users? @relation(fields: [user_id], references: [id])
  event_id Int
  Events Events? @relation(fields: [event_id], references: [id])
}

model EventVolunteerMap{
  event_id Int
  Events Events? @relation(fields: [event_id], references: [id])
  user_id Int
  Users Users? @relation(fields: [user_id], references: [id])
  @@id([event_id, user_id])
}

