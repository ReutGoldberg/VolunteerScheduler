generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// IMPORTANT!!!! DO NOT DELETE 
// IN ORDER TO GENERATE FAKE DATA: 
// UNCOMMENT THIS AND COMMENT OUT THE ABOVE TO USE THE FAKE DB INSTEAD OF PROD
// datasource db {
//   provider = "postgresql"
//   url      = env("FAKE_DATABASE_URL")
// }

model Users {
  id                Int                 @id @default(autoincrement())
  first_name        String?
  last_name         String?
  email             String              @unique
  token             String              @unique
  is_admin          Boolean
  EventVolunteerMap EventVolunteerMap[]
}

model Events {
  id                Int                 @id @default(autoincrement())
  title             String
  details           String
  created_by        String
  location          String?
  min_volunteers    Int?
  max_volunteers    Int?
  start_time        DateTime
  end_time          DateTime
  EventLabelMap     EventLabelMap[]
  EventVolunteerMap EventVolunteerMap[]
}

model Labels {
  id            Int             @id @default(autoincrement())
  name          String
  EventLabelMap EventLabelMap[]
}

model EventLabelMap {
  event_id Int
  Events   Events? @relation(fields: [event_id], references: [id], onDelete: Cascade)
  label_id Int
  Labels   Labels? @relation(fields: [label_id], references: [id], onDelete: Cascade)

  @@id([event_id, label_id])
}

model EventVolunteerMap {
  event_id Int
  Events   Events? @relation(fields: [event_id], references: [id], onDelete: Cascade)
  user_id  Int
  Users    Users?  @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([event_id, user_id])
}
